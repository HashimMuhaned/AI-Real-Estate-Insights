// "use client";

import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
// import "../styles/lovable-index.css"
// import "../styles/lovable-app.css"
import "./globals.css";
import Navbar from "@/components/Navbar";
import Footer from "@/components/Footer";
// import FloatingChatWidget from "@/components/AI-chat-window/icon-window";
// import { ChatWidgetProvider, useChatWidget } from "@/context/ChatWidgetContext";
// import { ChatProvider } from "@/context/ChatContext";
import AuthProvider from "@/providers/AuthProvider";
import { ChatProvider } from "@/context/ChatContext";
import ChatMainHome from "@/components/AI-chat-window/ChatMainHome";
// import FloatingChatWidget from '@/components/AI-chat-window/icon-window';

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

// function ChatWrapper() {
//   const { isOpen, toggleChat, closeChat } = useChatWidget();
//   return (
//     <FloatingChatWidget
//       isOpen={isOpen}
//       onToggle={toggleChat}
//       onClose={closeChat}
//     />
//   );
// }

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        {/* <ChatWidgetProvider> */}
        {/* <ChatProvider> */}

        <AuthProvider>
          <Navbar />
          <ChatProvider>
            {children}
            <ChatMainHome />
          </ChatProvider>
        </AuthProvider>
        {/* <ChatWrapper /> */}
        <Footer />
        {/* </ChatProvider> */}
        {/* </ChatWidgetProvider> */}
      </body>
    </html>
  );
}
